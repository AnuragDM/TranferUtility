google.maps.__gjsload__('geometry', function(_){var cv=function(a,b){return Math.abs(_.Wd(b-a,-180,180))},dv=function(a,b,c,d,e){if(!d){c=cv(a.lng(),c)/cv(a.lng(),b.lng());if(!e)return e=Math.sin(_.Ec(a.lat())),e=Math.log((1+e)/(1-e))/2,b=Math.sin(_.Ec(b.lat())),_.Fc(2*Math.atan(Math.exp(e+c*(Math.log((1+b)/(1-b))/2-e)))-Math.PI/2);a=e.fromLatLngToPoint(a);b=e.fromLatLngToPoint(b);return e.fromPointToLatLng(new _.N(a.x+c*(b.x-a.x),a.y+c*(b.y-a.y))).lat()}e=_.Ec(a.lat());a=_.Ec(a.lng());d=_.Ec(b.lat());b=_.Ec(b.lng());c=_.Ec(c);return _.Wd(_.Fc(Math.atan2(Math.sin(e)*
Math.cos(d)*Math.sin(c-b)-Math.sin(d)*Math.cos(e)*Math.sin(c-a),Math.cos(e)*Math.cos(d)*Math.sin(a-b))),-90,90)},ev=function(){},fv={containsLocation:function(a,b){var c=_.Wd(a.lng(),-180,180),d=!!b.get("geodesic"),e=b.get("latLngs"),f=b.get("map");f=!d&&f?f.getProjection():null;for(var g=!1,h=0,k=e.getLength();h<k;++h)for(var l=e.getAt(h),m=0,q=l.getLength();m<q;++m){var r=l.getAt(m),u=l.getAt((m+1)%q),v=_.Wd(r.lng(),-180,180),x=_.Wd(u.lng(),-180,180),w=Math.max(v,x);v=Math.min(v,x);(180<w-v?c>=
w||c<v:c<w&&c>=v)&&dv(r,u,c,d,f)<a.lat()&&(g=!g)}return g||fv.isLocationOnEdge(a,b)}};_.Ta("module$exports$PolyGeometry.containsLocation",fv.containsLocation);
fv.isLocationOnEdge=function(a,b,c){c=c||1E-9;var d=_.Wd(a.lng(),-180,180),e=b instanceof _.aj,f=!!b.get("geodesic"),g=b.get("latLngs");b=b.get("map");b=!f&&b?b.getProjection():null;for(var h=0,k=g.getLength();h<k;++h)for(var l=g.getAt(h),m=l.getLength(),q=e?m:m-1,r=0;r<q;++r){var u=l.getAt(r),v=l.getAt((r+1)%m),x=_.Wd(u.lng(),-180,180),w=_.Wd(v.lng(),-180,180),F=Math.max(x,w),C=Math.min(x,w);if(x=1E-9>=Math.abs(_.Wd(x-w,-180,180))&&(Math.abs(_.Wd(x-d,-180,180))<=c||Math.abs(_.Wd(w-d,-180,180))<=
c)){x=a.lat();w=Math.min(u.lat(),v.lat())-c;var L=Math.max(u.lat(),v.lat())+c;x=x>=w&&x<=L}if(x)return!0;if(180<F-C?d+c>=F||d-c<=C:d+c>=C&&d-c<=F)if(u=dv(u,v,d,f,b),Math.abs(u-a.lat())<c)return!0}return!1};_.Ta("module$exports$PolyGeometry.isLocationOnEdge",fv.isLocationOnEdge);var gv={},hv={},iv;
for(iv in fv)hv.qe=iv,gv[hv.qe]=function(a){return function(b){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];console.warn('Invoking "PolyGeometry.'+a.qe+'()" is not supported, use "google.maps.geometry.poly.'+a.qe+'()" instead.');_.ng(gv,"Lagpg");return fv[a.qe].apply(fv,_.ya(c))}}(hv),hv={qe:hv.qe};_.t.PolyGeometry=gv;var jv={computeHeading:function(a,b){var c=_.we(a),d=_.xe(a);a=_.we(b);b=_.xe(b)-d;return _.Wd(_.Fc(Math.atan2(Math.sin(b)*Math.cos(a),Math.cos(c)*Math.sin(a)-Math.sin(c)*Math.cos(a)*Math.cos(b))),-180,180)}};_.Ta("module$exports$Spherical.computeHeading",jv.computeHeading);
jv.computeOffset=function(a,b,c,d){b/=d||6378137;c=_.Ec(c);var e=_.we(a);a=_.xe(a);d=Math.cos(b);b=Math.sin(b);var f=Math.sin(e);e=Math.cos(e);var g=d*f+b*e*Math.cos(c);return new _.I(_.Fc(Math.asin(g)),_.Fc(a+Math.atan2(b*e*Math.sin(c),d-f*g)))};_.Ta("module$exports$Spherical.computeOffset",jv.computeOffset);
jv.computeOffsetOrigin=function(a,b,c,d){c=_.Ec(c);b/=d||6378137;d=Math.cos(b);var e=Math.sin(b)*Math.cos(c);b=Math.sin(b)*Math.sin(c);c=Math.sin(_.we(a));var f=e*e*d*d+d*d*d*d-d*d*c*c;if(0>f)return null;var g=e*c+Math.sqrt(f);g/=d*d+e*e;var h=(c-e*g)/d;g=Math.atan2(h,g);if(g<-Math.PI/2||g>Math.PI/2)g=e*c-Math.sqrt(f),g=Math.atan2(h,g/(d*d+e*e));if(g<-Math.PI/2||g>Math.PI/2)return null;a=_.xe(a)-Math.atan2(b,d*Math.cos(g)-e*Math.sin(g));return new _.I(_.Fc(g),_.Fc(a))};
_.Ta("module$exports$Spherical.computeOffsetOrigin",jv.computeOffsetOrigin);jv.interpolate=function(a,b,c){var d=_.we(a),e=_.xe(a),f=_.we(b),g=_.xe(b),h=Math.cos(d),k=Math.cos(f);b=jv.Ug(a,b);var l=Math.sin(b);if(1E-6>l)return new _.I(a.lat(),a.lng());a=Math.sin((1-c)*b)/l;c=Math.sin(c*b)/l;b=a*h*Math.cos(e)+c*k*Math.cos(g);e=a*h*Math.sin(e)+c*k*Math.sin(g);return new _.I(_.Fc(Math.atan2(a*Math.sin(d)+c*Math.sin(f),Math.sqrt(b*b+e*e))),_.Fc(Math.atan2(e,b)))};
_.Ta("module$exports$Spherical.interpolate",jv.interpolate);jv.Ug=function(a,b){var c=_.we(a);a=_.xe(a);var d=_.we(b);b=_.xe(b);return 2*Math.asin(Math.sqrt(Math.pow(Math.sin((c-d)/2),2)+Math.cos(c)*Math.cos(d)*Math.pow(Math.sin((a-b)/2),2)))};jv.computeDistanceBetween=function(a,b,c){c=c||6378137;return jv.Ug(a,b)*c};_.Ta("module$exports$Spherical.computeDistanceBetween",jv.computeDistanceBetween);
jv.computeLength=function(a,b){b=b||6378137;var c=0;a instanceof _.ih&&(a=a.getArray());for(var d=0,e=a.length-1;d<e;++d)c+=jv.computeDistanceBetween(a[d],a[d+1],b);return c};_.Ta("module$exports$Spherical.computeLength",jv.computeLength);jv.computeArea=function(a,b){return Math.abs(jv.computeSignedArea(a,b))};_.Ta("module$exports$Spherical.computeArea",jv.computeArea);
jv.computeSignedArea=function(a,b){b=b||6378137;a instanceof _.ih&&(a=a.getArray());for(var c=a[0],d=0,e=1,f=a.length-1;e<f;++e)d+=jv.Sl(c,a[e],a[e+1]);return d*b*b};_.Ta("module$exports$Spherical.computeSignedArea",jv.computeSignedArea);jv.Sl=function(a,b,c){return jv.Tl(a,b,c)*jv.Wm(a,b,c)};jv.Tl=function(a,b,c){var d=[a,b,c,a];a=[];for(c=b=0;3>c;++c)a[c]=jv.Ug(d[c],d[c+1]),b+=a[c];b/=2;d=Math.tan(b/2);for(c=0;3>c;++c)d*=Math.tan((b-a[c])/2);return 4*Math.atan(Math.sqrt(Math.abs(d)))};
jv.Wm=function(a,b,c){a=[a,b,c];b=[];for(c=0;3>c;++c){var d=a[c],e=_.we(d);d=_.xe(d);var f=b[c]=[];f[0]=Math.cos(e)*Math.cos(d);f[1]=Math.cos(e)*Math.sin(d);f[2]=Math.sin(e)}return 0<b[0][0]*b[1][1]*b[2][2]+b[1][0]*b[2][1]*b[0][2]+b[2][0]*b[0][1]*b[1][2]-b[0][0]*b[2][1]*b[1][2]-b[1][0]*b[0][1]*b[2][2]-b[2][0]*b[1][1]*b[0][2]?1:-1};var kv={},lv={},mv;
for(mv in jv)lv.ke=mv,kv[lv.ke]=function(a){return function(b){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];console.warn('Invoking "Spherical.'+a.ke+'()" is not supported, use "google.maps.geometry.spherical.'+a.ke+'()" instead.');_.ng(kv,"Lags");return jv[a.ke].apply(jv,_.ya(c))}}(lv),lv={ke:lv.ke};_.t.Spherical=kv;var nv={decodePath:function(a){for(var b=_.Sd(a),c=Array(Math.floor(a.length/2)),d=0,e=0,f=0,g=0;d<b;++g){var h=1,k=0;do{var l=a.charCodeAt(d++)-63-1;h+=l<<k;k+=5}while(31<=l);e+=h&1?~(h>>1):h>>1;h=1;k=0;do l=a.charCodeAt(d++)-63-1,h+=l<<k,k+=5;while(31<=l);f+=h&1?~(h>>1):h>>1;c[g]=new _.I(1E-5*e,1E-5*f,!0)}c.length=g;return c}};_.Ta("module$exports$PolylineCodec.decodePath",nv.decodePath);
nv.encodePath=function(a){a instanceof _.ih&&(a=a.getArray());return nv.ro(a,function(b){return[Math.round(1E5*b.lat()),Math.round(1E5*b.lng())]})};_.Ta("module$exports$PolylineCodec.encodePath",nv.encodePath);nv.ro=function(a,b){for(var c=[],d=[0,0],e,f=0,g=_.Sd(a);f<g;++f)e=b?b(a[f]):a[f],nv.Mj(e[0]-d[0],c),nv.Mj(e[1]-d[1],c),d=e;return c.join("")};nv.Mj=function(a,b){nv.to(0>a?~(a<<1):a<<1,b)};
nv.to=function(a,b){for(;32<=a;)b.push(String.fromCharCode((32|a&31)+63)),a>>=5;b.push(String.fromCharCode(a+63))};var ov={},pv={},qv;for(qv in nv)pv.oe=qv,ov[pv.oe]=function(a){return function(b){for(var c=[],d=0;d<arguments.length;++d)c[d-0]=arguments[d];console.warn('Invoking "PolylineCodec.'+a.oe+'()" is not supported, use "google.maps.geometry.encoding.'+a.oe+'()" instead.');_.ng(ov,"Lagpc");return nv[a.oe].apply(nv,_.ya(c))}}(pv),pv={oe:pv.oe};_.t.PolylineCodec=ov;_.t.google.maps.geometry={encoding:nv,spherical:jv,poly:fv};_.n=ev.prototype;_.n.decodePath=nv.decodePath;_.n.encodePath=nv.encodePath;_.n.computeDistanceBetween=jv.computeDistanceBetween;_.n.interpolate=jv.interpolate;_.n.computeHeading=jv.computeHeading;_.n.computeOffset=jv.computeOffset;_.n.computeOffsetOrigin=jv.computeOffsetOrigin;_.Xe("geometry",new ev);});
